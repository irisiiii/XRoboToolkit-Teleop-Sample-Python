//这一个文件存储通过get_last_error函数获取的错误码的映射
#include "jaka_robot_driver/jkerr.h"

const std::unordered_map<uint32_t, std::string> JAKA_ERROR_MAP = {
    {0x000030, "关节1运动速度超过限制"},
    {0x000031, "关节1到达正软限位"},
    {0x000032, "关节1到达负软限位"},
    {0x000033, "关节1即将到达正软限位"},
    {0x000034, "关节1即将到达负软限位"},
    {0x000035, "JOG目标位置超过关节1正软限位"},
    {0x000036, "JOG目标位置超过关节1负软限位"},
    {0x000037, "关节1加速度过大"},
    {0x000042, "关节1即将达到软限位"},
    {0x000061, "关节1检测到碰撞并停止运动"},
    {0x000200, "安装角度设置超过阈值"},
    {0x000250, "当前无法设置轨迹规划器"},
    {0x000350, "当前不在SERVO模式中"},
    {0x000351, "不可以在SERVO模式中设置滤波器"},
    {0x10F025A, "安全功能DI设置碰撞灵敏度（level5）已触发"},
    {0x10F025B, "安全功能DI设置碰撞灵敏度（level7）已触发"},
    {0x10F025C, "安全功能DI（保护性停止）已触发"},
    {0x10F0260, "安全功能DO（按钮急停触发）置位"},
    {0x10F0261, "安全功能DO（按钮急停触发）复位"},
    {0x10F0262, "安全功能DO（系统急停触发）置位"},
    {0x10F0263, "安全功能DO（系统急停触发）复位"},
    {0x10F0264, "安全功能DO（机器人处于保护性停止）置位"},
    {0x10F0265, "安全功能DO（机器人处于保护性停止）复位"},
    {0x10F0266, "安全功能DO（机器人运动中）置位"},
    {0x10F0267, "安全功能DO（机器人运动中）复位"},
    {0x10F0268, "安全功能DO（机器人处于缩减模式）置位"},
    {0x10F0269, "安全功能DO（机器人处于缩减模式）复位"},
    {0x10F0280, "动力学参数辨识完成"},
    {0x10F0281, "摩擦力参数辨识完成"},
    {0x10F0282, "写动力学参数完成，重启或重新上电生效"},
    {0x10F0283, "碰撞反弹终止"},
    {0x10F0284, "本次碰撞无反弹"},
    {0x10F0285, "制动电阻启动电压设置成功"},
    {0x10F0286, "程序已经在运行"},
    {0x10F0300, "登录初始化失败"},
    {0x10F0301, "此版本为测试版本"},
    {0x10F2000, "程序运行完成"},
    {0x10F2001, "终止程序运行"},
    {0x0F0008, "机器人关节达到正软限位"},
    {0x0F0009, "机器人关节达到负软限位"},
    {0x0F000A, "笛卡尔目标位置超过最大位置限制"},
    {0x0F000B, "笛卡尔目标位置超过最小位置限制"},
    {0x0F000E, "关节回零过程中无法进行手动操作"},
    {0x0F000F, "指令关节索引无效"},
    {0x0F0010, "运动指令速度无效"},
    {0x0F0011, "运动指令目标位置超过机器限制"},
    {0x0F0012, "非关节模式不能进行home操作"},
    {0x0F0013, "home正在进行"},


};

std::string get_jaka_error_msg(uint32_t code) {
    auto it = JAKA_ERROR_MAP.find(code);
    if (it != JAKA_ERROR_MAP.end()) {
        return it->second;
    } else {
        return "未知错误码";
    }
} 